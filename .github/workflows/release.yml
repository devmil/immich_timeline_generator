name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: linux
            arch: x64
            runner: ubuntu-latest
            dart-arch: x64
            artifact-name: immich_timeline_generator-linux-x64
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            dart-arch: arm64
            artifact-name: immich_timeline_generator-linux-arm64
          
          # macOS builds
          - os: macos
            arch: x64
            runner: macos-latest
            dart-arch: x64
            artifact-name: immich_timeline_generator-macos-x64
          - os: macos
            arch: arm64
            runner: macos-latest
            dart-arch: arm64
            artifact-name: immich_timeline_generator-macos-arm64
          
          # Windows builds
          - os: windows
            arch: x64
            runner: windows-latest
            dart-arch: x64
            artifact-name: immich_timeline_generator-windows-x64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable

    - name: Get dependencies
      run: dart pub get

    - name: Run tests
      run: dart test

    - name: Build executable
      run: |
        dart compile exe bin/immich_timeline_generator.dart -o ${{ matrix.artifact-name }} --target-os ${{ matrix.os }} --target-arch ${{ matrix.dart-arch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ matrix.artifact-name }}
        retention-days: 5

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display structure of downloaded files
      run: ls -la ./artifacts/

    - name: Prepare release files
      run: |
        mkdir -p ./release
        # Copy and rename files for release
        cp ./artifacts/immich_timeline_generator-linux-x64/immich_timeline_generator-linux-x64 ./release/
        cp ./artifacts/immich_timeline_generator-linux-arm64/immich_timeline_generator-linux-arm64 ./release/
        cp ./artifacts/immich_timeline_generator-macos-x64/immich_timeline_generator-macos-x64 ./release/
        cp ./artifacts/immich_timeline_generator-macos-arm64/immich_timeline_generator-macos-arm64 ./release/
        cp ./artifacts/immich_timeline_generator-windows-x64.exe/immich_timeline_generator-windows-x64.exe ./release/
        
        # Make executables executable (for Unix-like systems)
        chmod +x ./release/immich_timeline_generator-linux-x64
        chmod +x ./release/immich_timeline_generator-linux-arm64
        chmod +x ./release/immich_timeline_generator-macos-x64
        chmod +x ./release/immich_timeline_generator-macos-arm64

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## Immich Timeline Generator ${{ steps.version.outputs.VERSION }}
          
          ### Download the appropriate binary for your system:
          
          **Linux:**
          - `immich_timeline_generator-linux-x64` - For Intel/AMD 64-bit systems
          - `immich_timeline_generator-linux-arm64` - For ARM 64-bit systems (e.g., Raspberry Pi 4)
          
          **macOS:**
          - `immich_timeline_generator-macos-x64` - For Intel Macs
          - `immich_timeline_generator-macos-arm64` - For Apple Silicon Macs (M1/M2/M3)
          
          **Windows:**
          - `immich_timeline_generator-windows-x64.exe` - For 64-bit Windows systems
          
          ### Usage:
          ```bash
          # Make executable (Linux/macOS)
          chmod +x immich_timeline_generator-*
          
          # Run the tool
          ./immich_timeline_generator-* --help
          ```
          
          ### Changes in this release:
          - See commit history for detailed changes
          
        draft: false
        prerelease: false

    - name: Upload Linux x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/immich_timeline_generator-linux-x64
        asset_name: immich_timeline_generator-linux-x64
        asset_content_type: application/octet-stream

    - name: Upload Linux ARM64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/immich_timeline_generator-linux-arm64
        asset_name: immich_timeline_generator-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload macOS x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/immich_timeline_generator-macos-x64
        asset_name: immich_timeline_generator-macos-x64
        asset_content_type: application/octet-stream

    - name: Upload macOS ARM64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/immich_timeline_generator-macos-arm64
        asset_name: immich_timeline_generator-macos-arm64
        asset_content_type: application/octet-stream

    - name: Upload Windows x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/immich_timeline_generator-windows-x64.exe
        asset_name: immich_timeline_generator-windows-x64.exe
        asset_content_type: application/octet-stream
